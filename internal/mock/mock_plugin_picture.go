// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/duc-cnzj/mars/internal/plugins (interfaces: PictureInterface)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	contracts "github.com/duc-cnzj/mars/internal/contracts"
	gomock "github.com/golang/mock/gomock"
)

// MockPictureInterface is a mock of PictureInterface interface.
type MockPictureInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPictureInterfaceMockRecorder
}

// MockPictureInterfaceMockRecorder is the mock recorder for MockPictureInterface.
type MockPictureInterfaceMockRecorder struct {
	mock *MockPictureInterface
}

// NewMockPictureInterface creates a new mock instance.
func NewMockPictureInterface(ctrl *gomock.Controller) *MockPictureInterface {
	mock := &MockPictureInterface{ctrl: ctrl}
	mock.recorder = &MockPictureInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPictureInterface) EXPECT() *MockPictureInterfaceMockRecorder {
	return m.recorder
}

// Destroy mocks base method.
func (m *MockPictureInterface) Destroy() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Destroy")
	ret0, _ := ret[0].(error)
	return ret0
}

// Destroy indicates an expected call of Destroy.
func (mr *MockPictureInterfaceMockRecorder) Destroy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockPictureInterface)(nil).Destroy))
}

// Get mocks base method.
func (m *MockPictureInterface) Get(arg0 context.Context, arg1 bool) (*contracts.Picture, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*contracts.Picture)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockPictureInterfaceMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPictureInterface)(nil).Get), arg0, arg1)
}

// Initialize mocks base method.
func (m *MockPictureInterface) Initialize(arg0 map[string]any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Initialize", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Initialize indicates an expected call of Initialize.
func (mr *MockPictureInterfaceMockRecorder) Initialize(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Initialize", reflect.TypeOf((*MockPictureInterface)(nil).Initialize), arg0)
}

// Name mocks base method.
func (m *MockPictureInterface) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name.
func (mr *MockPictureInterfaceMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockPictureInterface)(nil).Name))
}
