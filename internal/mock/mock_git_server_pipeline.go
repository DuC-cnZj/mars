// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/duc-cnzj/mars/v4/internal/contracts (interfaces: PipelineInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockPipelineInterface is a mock of PipelineInterface interface.
type MockPipelineInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPipelineInterfaceMockRecorder
}

// MockPipelineInterfaceMockRecorder is the mock recorder for MockPipelineInterface.
type MockPipelineInterfaceMockRecorder struct {
	mock *MockPipelineInterface
}

// NewMockPipelineInterface creates a new mock instance.
func NewMockPipelineInterface(ctrl *gomock.Controller) *MockPipelineInterface {
	mock := &MockPipelineInterface{ctrl: ctrl}
	mock.recorder = &MockPipelineInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPipelineInterface) EXPECT() *MockPipelineInterfaceMockRecorder {
	return m.recorder
}

// GetCreatedAt mocks base method.
func (m *MockPipelineInterface) GetCreatedAt() *time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCreatedAt")
	ret0, _ := ret[0].(*time.Time)
	return ret0
}

// GetCreatedAt indicates an expected call of GetCreatedAt.
func (mr *MockPipelineInterfaceMockRecorder) GetCreatedAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCreatedAt", reflect.TypeOf((*MockPipelineInterface)(nil).GetCreatedAt))
}

// GetID mocks base method.
func (m *MockPipelineInterface) GetID() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetID indicates an expected call of GetID.
func (mr *MockPipelineInterfaceMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockPipelineInterface)(nil).GetID))
}

// GetProjectID mocks base method.
func (m *MockPipelineInterface) GetProjectID() int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProjectID")
	ret0, _ := ret[0].(int64)
	return ret0
}

// GetProjectID indicates an expected call of GetProjectID.
func (mr *MockPipelineInterfaceMockRecorder) GetProjectID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProjectID", reflect.TypeOf((*MockPipelineInterface)(nil).GetProjectID))
}

// GetRef mocks base method.
func (m *MockPipelineInterface) GetRef() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRef")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRef indicates an expected call of GetRef.
func (mr *MockPipelineInterfaceMockRecorder) GetRef() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRef", reflect.TypeOf((*MockPipelineInterface)(nil).GetRef))
}

// GetSHA mocks base method.
func (m *MockPipelineInterface) GetSHA() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSHA")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSHA indicates an expected call of GetSHA.
func (mr *MockPipelineInterfaceMockRecorder) GetSHA() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSHA", reflect.TypeOf((*MockPipelineInterface)(nil).GetSHA))
}

// GetStatus mocks base method.
func (m *MockPipelineInterface) GetStatus() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatus")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetStatus indicates an expected call of GetStatus.
func (mr *MockPipelineInterfaceMockRecorder) GetStatus() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatus", reflect.TypeOf((*MockPipelineInterface)(nil).GetStatus))
}

// GetUpdatedAt mocks base method.
func (m *MockPipelineInterface) GetUpdatedAt() *time.Time {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUpdatedAt")
	ret0, _ := ret[0].(*time.Time)
	return ret0
}

// GetUpdatedAt indicates an expected call of GetUpdatedAt.
func (mr *MockPipelineInterfaceMockRecorder) GetUpdatedAt() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpdatedAt", reflect.TypeOf((*MockPipelineInterface)(nil).GetUpdatedAt))
}

// GetWebURL mocks base method.
func (m *MockPipelineInterface) GetWebURL() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWebURL")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetWebURL indicates an expected call of GetWebURL.
func (mr *MockPipelineInterfaceMockRecorder) GetWebURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWebURL", reflect.TypeOf((*MockPipelineInterface)(nil).GetWebURL))
}
