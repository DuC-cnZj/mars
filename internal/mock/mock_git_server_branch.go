// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/duc-cnzj/mars/v4/internal/contracts (interfaces: BranchInterface)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBranchInterface is a mock of BranchInterface interface.
type MockBranchInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBranchInterfaceMockRecorder
}

// MockBranchInterfaceMockRecorder is the mock recorder for MockBranchInterface.
type MockBranchInterfaceMockRecorder struct {
	mock *MockBranchInterface
}

// NewMockBranchInterface creates a new mock instance.
func NewMockBranchInterface(ctrl *gomock.Controller) *MockBranchInterface {
	mock := &MockBranchInterface{ctrl: ctrl}
	mock.recorder = &MockBranchInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBranchInterface) EXPECT() *MockBranchInterfaceMockRecorder {
	return m.recorder
}

// GetName mocks base method.
func (m *MockBranchInterface) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockBranchInterfaceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockBranchInterface)(nil).GetName))
}

// GetWebURL mocks base method.
func (m *MockBranchInterface) GetWebURL() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWebURL")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetWebURL indicates an expected call of GetWebURL.
func (mr *MockBranchInterfaceMockRecorder) GetWebURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWebURL", reflect.TypeOf((*MockBranchInterface)(nil).GetWebURL))
}

// IsDefault mocks base method.
func (m *MockBranchInterface) IsDefault() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsDefault")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsDefault indicates an expected call of IsDefault.
func (mr *MockBranchInterfaceMockRecorder) IsDefault() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsDefault", reflect.TypeOf((*MockBranchInterface)(nil).IsDefault))
}
