// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/duc-cnzj/mars/internal/plugins (interfaces: WsSender)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	contracts "github.com/duc-cnzj/mars/internal/contracts"
	gomock "github.com/golang/mock/gomock"
)

// MockWsSender is a mock of WsSender interface.
type MockWsSender struct {
	ctrl     *gomock.Controller
	recorder *MockWsSenderMockRecorder
}

// MockWsSenderMockRecorder is the mock recorder for MockWsSender.
type MockWsSenderMockRecorder struct {
	mock *MockWsSender
}

// NewMockWsSender creates a new mock instance.
func NewMockWsSender(ctrl *gomock.Controller) *MockWsSender {
	mock := &MockWsSender{ctrl: ctrl}
	mock.recorder = &MockWsSenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWsSender) EXPECT() *MockWsSenderMockRecorder {
	return m.recorder
}

// Destroy mocks base method.
func (m *MockWsSender) Destroy() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Destroy")
	ret0, _ := ret[0].(error)
	return ret0
}

// Destroy indicates an expected call of Destroy.
func (mr *MockWsSenderMockRecorder) Destroy() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Destroy", reflect.TypeOf((*MockWsSender)(nil).Destroy))
}

// Initialize mocks base method.
func (m *MockWsSender) Initialize(arg0 map[string]interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Initialize", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Initialize indicates an expected call of Initialize.
func (mr *MockWsSenderMockRecorder) Initialize(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Initialize", reflect.TypeOf((*MockWsSender)(nil).Initialize), arg0)
}

// Name mocks base method.
func (m *MockWsSender) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name.
func (mr *MockWsSenderMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockWsSender)(nil).Name))
}

// New mocks base method.
func (m *MockWsSender) New(arg0, arg1 string) contracts.PubSub {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", arg0, arg1)
	ret0, _ := ret[0].(contracts.PubSub)
	return ret0
}

// New indicates an expected call of New.
func (mr *MockWsSenderMockRecorder) New(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockWsSender)(nil).New), arg0, arg1)
}
