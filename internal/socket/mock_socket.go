// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/duc-cnzj/mars/v4/internal/socket (interfaces: JobManager)
//
// Generated by this command:
//
//	mockgen -destination ./mock_socket.go -package socket github.com/duc-cnzj/mars/v4/internal/socket JobManager
//

// Package socket is a generated GoMock package.
package socket

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockJobManager is a mock of JobManager interface.
type MockJobManager struct {
	ctrl     *gomock.Controller
	recorder *MockJobManagerMockRecorder
}

// MockJobManagerMockRecorder is the mock recorder for MockJobManager.
type MockJobManagerMockRecorder struct {
	mock *MockJobManager
}

// NewMockJobManager creates a new mock instance.
func NewMockJobManager(ctrl *gomock.Controller) *MockJobManager {
	mock := &MockJobManager{ctrl: ctrl}
	mock.recorder = &MockJobManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJobManager) EXPECT() *MockJobManagerMockRecorder {
	return m.recorder
}

// NewJob mocks base method.
func (m *MockJobManager) NewJob(arg0 *JobInput) Job {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewJob", arg0)
	ret0, _ := ret[0].(Job)
	return ret0
}

// NewJob indicates an expected call of NewJob.
func (mr *MockJobManagerMockRecorder) NewJob(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewJob", reflect.TypeOf((*MockJobManager)(nil).NewJob), arg0)
}
