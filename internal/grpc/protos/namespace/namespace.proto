syntax = "proto3";

import "google/api/annotations.proto";
import "model/model.proto";
import "validate/validate.proto";

option go_package = "github.com/duc-cnzj/mars-client/v3/namespace;namespace";

message NamespaceCreateRequest {
  string namespace = 1 [(validate.rules).string.min_bytes = 1];
}

message NamespaceShowRequest {
  int64 namespace_id = 1 [(validate.rules).int64.gt = 0];
}

message NamespaceDeleteRequest {
  int64 namespace_id = 1 [(validate.rules).int64.gt = 0];
}

message NamespaceIsExistsRequest {
  string name = 1 [(validate.rules).string.min_bytes = 1];
}

message NamespaceCpuMemoryRequest {
  int64 namespace_id = 1 [(validate.rules).int64.gt = 0];
}

message NamespaceServiceEndpointsRequest {
  int64 namespace_id = 1 [(validate.rules).int64.gt = 0];
  string project_name = 2;
}

message NamespaceSimpleProject {
  int64 id = 1;
  string name = 2;
  string status = 3;
}
message NamespaceItem {
  int64 id = 1;
  string name = 2;
  string created_at = 3;
  string updated_at = 4;

  repeated NamespaceSimpleProject projects = 5;
}
message NamespaceAllResponse {
  repeated NamespaceItem data = 1;
}

message NamespaceCreateResponse {
  int64 id = 1;
  string name = 2;
  repeated string image_pull_secrets = 3;
  string created_at = 4;
  string updated_at = 5;
}

message NamespaceShowResponse {
  int64 id = 1;
  string name = 2;
  repeated string image_pull_secrets = 3;
  string created_at = 4;
  string updated_at = 5;
  repeated ProjectModel projects = 6;
}

message NamespaceCpuMemoryResponse {
  string cpu = 1;
  string memory = 2;
}

message NamespaceServiceEndpoint {
    string name = 1;
    string url = 2;
    string port_name = 3;
}

message NamespaceServiceEndpointsResponse {
  repeated NamespaceServiceEndpoint data = 1;
}

message NamespaceIsExistsResponse {
  bool exists = 1;
  int64 id = 2;
}
message NamespaceAllRequest {}
message NamespaceDeleteResponse {}

service Namespace {
  // All 获取所有的名称空间
  rpc All(NamespaceAllRequest) returns (NamespaceAllResponse) {
    option (google.api.http) = {
      get: "/api/namespaces"
    };
  }

  // Create 创建名称空间
  rpc Create(NamespaceCreateRequest) returns (NamespaceCreateResponse) {
    option (google.api.http) = {
      post: "/api/namespaces",
      body: "*"
    };
  }

  // Show 查看名称空间详情
  rpc Show(NamespaceShowRequest) returns (NamespaceShowResponse) {
    option (google.api.http) = {
      get: "/api/namespaces/{namespace_id}"
    };
  }

  // Delete 删除名称空间
  rpc Delete(NamespaceDeleteRequest) returns (NamespaceDeleteResponse) {
    option (google.api.http) = {
      delete: "/api/namespaces/{namespace_id}"
    };
  }

  // IsExists 名称空间是否存在
  rpc IsExists(NamespaceIsExistsRequest) returns (NamespaceIsExistsResponse) {
    option (google.api.http) = {
      post: "/api/namespaces/exists"
    };
  }

  // CpuMemory 名称空间总共使用的 cpu memory
  rpc CpuMemory(NamespaceCpuMemoryRequest) returns (NamespaceCpuMemoryResponse) {
    option (google.api.http) = {
      get: "/api/namespaces/{namespace_id}/cpu_memory"
    };
  }

  // ServiceEndpoints 名称空间下面所有服务的 endpoint
  rpc ServiceEndpoints(NamespaceServiceEndpointsRequest) returns (NamespaceServiceEndpointsResponse) {
    option (google.api.http) = {
      get: "/api/namespaces/{namespace_id}/service_endpoints"
    };
  }
}