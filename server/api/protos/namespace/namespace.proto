syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package="github.com/duc-cnzj/mars/pkg/namespace;namespace";

message NamespaceID {
  int64 namespace_id = 1;
}

message NamespaceResponse {
  int64 id = 1;
  string name = 2;
  repeated string image_pull_secrets = 3;
  google.protobuf.Timestamp created_at = 4;
  google.protobuf.Timestamp updated_at = 5;
  google.protobuf.Timestamp deleted_at = 6;
}

message NamespaceItem {
  message SimpleProjectItem {
    int64 id = 1;
    string name = 2;
    string status = 3;
  }

  int64 id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;

  repeated SimpleProjectItem projects = 5;
}

message NamespaceList {
  repeated NamespaceItem data = 1;
}

message NsStoreRequest {
    string namespace = 1;
}

message NsStoreResponse {
  NamespaceResponse data = 1;
}

message CpuAndMemoryResponse {
  string cpu = 1;
  string memory = 2;
}

message ServiceEndpointsResponse {
  message item {
    repeated string name = 1;
  }

  map<string, item> data = 1;
}

message ServiceEndpointsRequest {
  int64 namespace_id = 1;
  string project_name = 2;
}

service Namespace {
  rpc Index(google.protobuf.Empty) returns (NamespaceList) {
    option (google.api.http) = {
      get: "/api/namespaces"
    };
  }

  rpc Store(NsStoreRequest) returns (NsStoreResponse) {
    option (google.api.http) = {
      post: "/api/namespaces",
      body: "*"
    };
  }

  rpc CpuAndMemory(NamespaceID) returns (CpuAndMemoryResponse) {
    option (google.api.http) = {
      get: "/api/namespaces/{namespace_id}/cpu_and_memory"
    };
  }

  rpc ServiceEndpoints(ServiceEndpointsRequest) returns (ServiceEndpointsResponse) {
    option (google.api.http) = {
      get: "/api/namespaces/{namespace_id}/service_endpoints"
    };
  }

  rpc Destroy(NamespaceID) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/namespaces/{namespace_id}"
    };
  }
}