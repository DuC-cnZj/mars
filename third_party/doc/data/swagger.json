{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "mars api docs",
    "version": "version not set"
  },
  "paths": {
    "/api/auth/exchange": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Exchange sso code 换取 token",
        "operationId": "Auth_Exchange",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthExchangeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AuthExchangeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/auth/info": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Info 获取当前登录的用户信息",
        "operationId": "Auth_Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AuthInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "security": [],
        "tags": [
          "Auth"
        ],
        "summary": "Login 登录接口",
        "operationId": "Auth_Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AuthLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/auth/settings": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Settings 获取 sso 配置以及跳转 url",
        "operationId": "Auth_Settings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AuthSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/cluster_info": {
      "get": {
        "security": [],
        "tags": [
          "Cluster"
        ],
        "summary": "ClusterInfo 查看集群信息",
        "operationId": "Cluster_ClusterInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ClusterInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/copy_to_pod": {
      "post": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "CopyToPod (web): 页面上传文件到 pod 内部",
        "operationId": "ContainerSvc_CopyToPod",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerCopyToPodRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ContainerCopyToPodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/namespaces/{namespace}/pods/{pod}/containers/{container}/logs": {
      "get": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "ContainerLog 查看 pod 日志",
        "operationId": "ContainerSvc_ContainerLog",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "container",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ContainerLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/namespaces/{namespace}/pods/{pod}/containers/{container}/stream_logs": {
      "get": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "StreamContainerLog stream 方式查看 pod 日志",
        "operationId": "ContainerSvc_StreamContainerLog",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "container",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of ContainerLogResponse",
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/ContainerLogResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/pod_exists": {
      "post": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "IsPodExists pod 是否存在",
        "operationId": "ContainerSvc_IsPodExists",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerIsPodExistsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ContainerIsPodExistsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/containers/pod_running_status": {
      "post": {
        "tags": [
          "ContainerSvc"
        ],
        "summary": "IsPodRunning pod 是否正常在跑",
        "operationId": "ContainerSvc_IsPodRunning",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerIsPodRunningRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ContainerIsPodRunningResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/endpoints/namespaces/{namespace_id}": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "InNamespace 名称空间下所有的 endpoints",
        "operationId": "Endpoint_InNamespace",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EndpointInNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/endpoints/projects/{project_id}": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "InProject 项目下所有的 endpoints",
        "operationId": "Endpoint_InProject",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EndpointInProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "List 用户操作事件列表",
        "operationId": "Event_List",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EventListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/files": {
      "get": {
        "tags": [
          "FileSvc"
        ],
        "summary": "文件列表",
        "operationId": "FileSvc_List",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "without_deleted",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/FileListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/files/delete_undocumented_files": {
      "delete": {
        "tags": [
          "FileSvc"
        ],
        "summary": "DeleteUndocumentedFiles 删除未被记录的文件，model 表中没有，但是文件目录中有",
        "operationId": "FileSvc_DeleteUndocumentedFiles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DeleteUndocumentedFilesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/files/disk_info": {
      "get": {
        "tags": [
          "FileSvc"
        ],
        "summary": "DiskInfo 查看上传文件目录大小",
        "operationId": "FileSvc_DiskInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DiskInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/files/{id}": {
      "delete": {
        "tags": [
          "FileSvc"
        ],
        "summary": "删除文件",
        "operationId": "FileSvc_Delete",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/FileDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/project_options": {
      "get": {
        "tags": [
          "GitProject"
        ],
        "summary": "ProjectOptions 获取项目信息， 用在级联列表",
        "operationId": "GitProject_ProjectOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitProjectOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects": {
      "get": {
        "tags": [
          "GitProject"
        ],
        "summary": "All 获取所有的 git 项目",
        "operationId": "GitProject_All",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitAllProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/disable": {
      "post": {
        "tags": [
          "GitProject"
        ],
        "summary": "DisableProject 关闭项目",
        "operationId": "GitProject_DisableProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitDisableProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitDisableProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/enable": {
      "post": {
        "tags": [
          "GitProject"
        ],
        "summary": "EnableProject 开启项目，开启后可以在项目列表看到",
        "operationId": "GitProject_EnableProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitEnableProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitEnableProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/{git_project_id}/branch_options": {
      "get": {
        "tags": [
          "GitProject"
        ],
        "summary": "BranchOptions 获取分支信息， 用在级联列表",
        "operationId": "GitProject_BranchOptions",
        "parameters": [
          {
            "type": "string",
            "name": "git_project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "all",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitBranchOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/{git_project_id}/branches/{branch}/commit_options": {
      "get": {
        "tags": [
          "GitProject"
        ],
        "summary": "CommitOptions 获取commit信息， 用在级联列表",
        "operationId": "GitProject_CommitOptions",
        "parameters": [
          {
            "type": "string",
            "name": "git_project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitCommitOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/{git_project_id}/branches/{branch}/commits/{commit}": {
      "get": {
        "tags": [
          "GitProject"
        ],
        "summary": "Commit 获取 commit 详情",
        "operationId": "GitProject_Commit",
        "parameters": [
          {
            "type": "string",
            "name": "git_project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "commit",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitCommitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/{git_project_id}/branches/{branch}/commits/{commit}/pipeline_info": {
      "get": {
        "tags": [
          "GitProject"
        ],
        "summary": "PipelineInfo 获取 pipeline 详情",
        "operationId": "GitProject_PipelineInfo",
        "parameters": [
          {
            "type": "string",
            "name": "git_project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "commit",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitPipelineInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/{git_project_id}/branches/{branch}/config_file": {
      "get": {
        "tags": [
          "GitProject"
        ],
        "summary": "MarsConfigFile 获取项目 mars 配置详情",
        "operationId": "GitProject_MarsConfigFile",
        "parameters": [
          {
            "type": "string",
            "name": "git_project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitConfigFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/{git_project_id}/default_values": {
      "get": {
        "tags": [
          "GitProjectConfig"
        ],
        "summary": "GetDefaultChartValues 获取项目 helm charts 的默认 values.yaml",
        "operationId": "GitProjectConfig_GetDefaultChartValues",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "git_project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitProjectConfigDefaultChartValuesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/{git_project_id}/global_config": {
      "get": {
        "tags": [
          "GitProjectConfig"
        ],
        "summary": "GlobalConfig 查看项目 GlobalConfig 配置",
        "operationId": "GitProjectConfig_GlobalConfig",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "git_project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitProjectConfigGlobalConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/{git_project_id}/mars_config": {
      "get": {
        "tags": [
          "GitProjectConfig"
        ],
        "summary": "Show 查看项目配置",
        "operationId": "GitProjectConfig_Show",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "git_project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitProjectConfigShowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "put": {
        "tags": [
          "GitProjectConfig"
        ],
        "summary": "Update 更新全局配置",
        "operationId": "GitProjectConfig_Update",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "git_project_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "$ref": "#/definitions/MarsConfig"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitProjectConfigUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitproject/projects/{git_project_id}/toggle_status": {
      "post": {
        "tags": [
          "GitProjectConfig"
        ],
        "summary": "ToggleGlobalStatus 开启/关闭全局配置",
        "operationId": "GitProjectConfig_ToggleGlobalStatus",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "git_project_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GitProjectConfigToggleGlobalStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/metrics/namespace/{namespace_id}/cpu_memory": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "CpuMemoryInNamespace 名称空间总共使用的 cpu memory",
        "operationId": "Metrics_CpuMemoryInNamespace",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MetricsCpuMemoryInNamespaceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/metrics/namespace/{namespace}/pods/{pod}": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "TopPod 获取 pod 的 cpu memory 信息",
        "operationId": "Metrics_TopPod",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MetricsTopPodResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/metrics/namespace/{namespace}/pods/{pod}/stream": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "StreamTopPod stream 的方式获取 pod 的 cpu memory 信息",
        "operationId": "Metrics_StreamTopPod",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of MetricsTopPodResponse",
              "properties": {
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                },
                "result": {
                  "$ref": "#/definitions/MetricsTopPodResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/metrics/projects/{project_id}/cpu_memory": {
      "get": {
        "tags": [
          "Metrics"
        ],
        "summary": "CpuMemoryInProject 项目空间总共使用的 cpu memory",
        "operationId": "Metrics_CpuMemoryInProject",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MetricsCpuMemoryInProjectResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "summary": "All 获取所有的名称空间",
        "operationId": "Namespace_All",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/NamespaceAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Namespace"
        ],
        "summary": "Create 创建名称空间",
        "operationId": "Namespace_Create",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NamespaceCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/NamespaceCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces/exists": {
      "post": {
        "tags": [
          "Namespace"
        ],
        "summary": "IsExists 名称空间是否存在",
        "operationId": "Namespace_IsExists",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/NamespaceIsExistsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces/{namespace_id}": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "summary": "Show 查看名称空间详情",
        "operationId": "Namespace_Show",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/NamespaceShowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Namespace"
        ],
        "summary": "Delete 删除名称空间",
        "operationId": "Namespace_Delete",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/NamespaceDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/picture/background": {
      "get": {
        "security": [],
        "tags": [
          "Picture"
        ],
        "summary": "Background 获取背景图片",
        "operationId": "Picture_Background",
        "parameters": [
          {
            "type": "boolean",
            "name": "random",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BackgroundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "List 获取项目列表",
        "operationId": "Project_List",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProjectListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/projects/{project_id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Show 项目详情",
        "operationId": "Project_Show",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProjectShowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete 删除项目",
        "operationId": "Project_Delete",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProjectDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/projects/{project_id}/changelogs": {
      "get": {
        "tags": [
          "Changelog"
        ],
        "summary": "Show 查看项目修改的版本差异",
        "operationId": "Changelog_Show",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "only_changed",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ChangelogShowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/projects/{project_id}/containers": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "AllContainers 获取项目下的所有 pod",
        "operationId": "Project_AllContainers",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProjectAllContainersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/version": {
      "get": {
        "security": [],
        "tags": [
          "Version"
        ],
        "summary": "Version 获取当前版本信息",
        "operationId": "Version_Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ActionType": {
      "type": "string",
      "default": "Unknown",
      "enum": [
        "Unknown",
        "Create",
        "Update",
        "Delete",
        "Upload",
        "Download",
        "DryRun"
      ]
    },
    "AuthExchangeRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "AuthExchangeResponse": {
      "type": "object",
      "properties": {
        "expires_in": {
          "type": "string",
          "format": "int64"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "AuthInfoResponse": {
      "type": "object",
      "properties": {
        "avatar": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "logout_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AuthLoginRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "AuthLoginResponse": {
      "type": "object",
      "properties": {
        "expires_in": {
          "type": "string",
          "format": "int64"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "AuthSettingsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthSettingsResponseOidcSetting"
          }
        }
      }
    },
    "AuthSettingsResponseOidcSetting": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "end_session_endpoint": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "BackgroundResponse": {
      "type": "object",
      "properties": {
        "copyright": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ChangelogShowItem": {
      "type": "object",
      "properties": {
        "config": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ChangelogShowResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangelogShowItem"
          }
        }
      }
    },
    "ClusterInfoResponse": {
      "type": "object",
      "properties": {
        "free_cpu": {
          "type": "string"
        },
        "free_memory": {
          "type": "string"
        },
        "free_request_cpu": {
          "type": "string"
        },
        "free_request_memory": {
          "type": "string"
        },
        "request_cpu_rate": {
          "type": "string"
        },
        "request_memory_rate": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "total_cpu": {
          "type": "string"
        },
        "total_memory": {
          "type": "string"
        },
        "usage_cpu_rate": {
          "type": "string"
        },
        "usage_memory_rate": {
          "type": "string"
        }
      }
    },
    "ContainerCopyToPodRequest": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "namespace": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        }
      }
    },
    "ContainerCopyToPodResponse": {
      "type": "object",
      "properties": {
        "file_name": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "pod_file_path": {
          "type": "string"
        }
      }
    },
    "ContainerExecResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "ContainerIsPodExistsRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        }
      }
    },
    "ContainerIsPodExistsResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        }
      }
    },
    "ContainerIsPodRunningRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        }
      }
    },
    "ContainerIsPodRunningResponse": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "running": {
          "type": "boolean"
        }
      }
    },
    "ContainerLogResponse": {
      "type": "object",
      "properties": {
        "container_name": {
          "type": "string"
        },
        "log": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "pod_name": {
          "type": "string"
        }
      }
    },
    "ContainerStreamCopyToPodResponse": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        },
        "pod_file_path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "DeleteUndocumentedFilesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/File"
          }
        }
      }
    },
    "DiskInfoResponse": {
      "type": "object",
      "properties": {
        "humanize_usage": {
          "type": "string"
        },
        "usage": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "Element": {
      "type": "object",
      "properties": {
        "default": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "select_values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "$ref": "#/definitions/ElementType"
        }
      }
    },
    "ElementType": {
      "type": "string",
      "default": "ElementTypeUnknown",
      "enum": [
        "ElementTypeUnknown",
        "ElementTypeInput",
        "ElementTypeInputNumber",
        "ElementTypeSelect",
        "ElementTypeRadio",
        "ElementTypeSwitch"
      ]
    },
    "EndpointInNamespaceResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpoint"
          }
        }
      }
    },
    "EndpointInProjectResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpoint"
          }
        }
      }
    },
    "EventListItem": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/ActionType"
        },
        "event_at": {
          "type": "string"
        },
        "file_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "message": {
          "type": "string"
        },
        "new": {
          "type": "string"
        },
        "old": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "EventListResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventListItem"
          }
        },
        "page": {
          "type": "string",
          "format": "int64"
        },
        "page_size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "File": {
      "type": "object",
      "properties": {
        "humanize_size": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "upload_by": {
          "type": "string"
        }
      }
    },
    "FileDeleteResponse": {
      "type": "object",
      "properties": {
        "file": {
          "$ref": "#/definitions/File"
        }
      }
    },
    "FileListResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileModel"
          }
        },
        "page": {
          "type": "string",
          "format": "int64"
        },
        "page_size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "FileModel": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "container_path": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "is_deleted": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "pod": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "updated_at": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "GitAllProjectsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitProjectItem"
          }
        }
      }
    },
    "GitBranchOptionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitOption"
          }
        }
      }
    },
    "GitCommitOptionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitOption"
          }
        }
      }
    },
    "GitCommitResponse": {
      "type": "object",
      "properties": {
        "author_email": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "committed_date": {
          "type": "string"
        },
        "committer_email": {
          "type": "string"
        },
        "committer_name": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "git_project_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "short_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "web_url": {
          "type": "string"
        }
      }
    },
    "GitConfigFileResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Element"
          }
        },
        "type": {
          "type": "string"
        }
      }
    },
    "GitDisableProjectRequest": {
      "type": "object",
      "properties": {
        "git_project_id": {
          "type": "string"
        }
      }
    },
    "GitDisableProjectResponse": {
      "type": "object"
    },
    "GitEnableProjectRequest": {
      "type": "object",
      "properties": {
        "git_project_id": {
          "type": "string"
        }
      }
    },
    "GitEnableProjectResponse": {
      "type": "object"
    },
    "GitOption": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "gitProjectId": {
          "type": "string"
        },
        "isLeaf": {
          "type": "boolean",
          "title": "isLeaf 兼容 antd"
        },
        "label": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "GitPipelineInfoResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "web_url": {
          "type": "string"
        }
      }
    },
    "GitProjectConfigDefaultChartValuesResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "GitProjectConfigGlobalConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/MarsConfig"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "GitProjectConfigShowResponse": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/MarsConfig"
        }
      }
    },
    "GitProjectConfigToggleGlobalStatusResponse": {
      "type": "object"
    },
    "GitProjectConfigUpdateResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/MarsConfig"
        }
      }
    },
    "GitProjectItem": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "global_enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "web_url": {
          "type": "string"
        }
      }
    },
    "GitProjectOptionsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitOption"
          }
        }
      }
    },
    "MarsConfig": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "title": "branches 启用的分支",
          "items": {
            "type": "string"
          }
        },
        "config_field": {
          "type": "string"
        },
        "config_file": {
          "type": "string",
          "title": "config_file 指定项目下的默认配置文件, 也可以是别的项目的文件，格式为 \"pid|branch|filename\""
        },
        "config_file_type": {
          "description": "config_file_type 配置文件类型，php/env/yaml...",
          "type": "string"
        },
        "config_file_values": {
          "type": "string",
          "title": "config_file_values 全局配置文件，如果没有 ConfigFile 则使用这个"
        },
        "elements": {
          "type": "array",
          "title": "elements 自定义字段",
          "items": {
            "$ref": "#/definitions/Element"
          }
        },
        "is_simple_env": {
          "type": "boolean"
        },
        "local_chart_path": {
          "type": "string",
          "title": "local_chart_path helm charts 目录, charts 文件在项目中存放的目录(必填), 也可以是别的项目的文件，格式为 \"pid|branch|path\""
        },
        "values_yaml": {
          "type": "string",
          "title": "values_yaml 和 values.yaml 一样"
        }
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "end": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/ResultType"
        },
        "slug": {
          "type": "string"
        },
        "to": {
          "$ref": "#/definitions/To"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "MetricsCpuMemoryInNamespaceResponse": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string"
        },
        "memory": {
          "type": "string"
        }
      }
    },
    "MetricsCpuMemoryInProjectResponse": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string"
        },
        "memory": {
          "type": "string"
        }
      }
    },
    "MetricsTopPodResponse": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "number",
          "format": "double"
        },
        "humanize_cpu": {
          "type": "string"
        },
        "humanize_memory": {
          "type": "string"
        },
        "length": {
          "type": "string",
          "format": "int64"
        },
        "memory": {
          "type": "number",
          "format": "double"
        },
        "time": {
          "type": "string"
        }
      }
    },
    "NamespaceAllResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceItem"
          }
        }
      }
    },
    "NamespaceCreateRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "NamespaceCreateResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "image_pull_secrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "NamespaceDeleteResponse": {
      "type": "object"
    },
    "NamespaceIsExistsResponse": {
      "type": "object",
      "properties": {
        "exists": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "NamespaceItem": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceSimpleProject"
          }
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "NamespaceModel": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "image_pull_secrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectModel"
          }
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "NamespaceShowResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "image_pull_secrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectModel"
          }
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "NamespaceSimpleProject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "ProjectAllContainersResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectPod"
          }
        }
      }
    },
    "ProjectApplyResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/Metadata"
        },
        "project": {
          "$ref": "#/definitions/ProjectModel"
        }
      }
    },
    "ProjectDeleteResponse": {
      "type": "object"
    },
    "ProjectDryRunApplyResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProjectExtraItem": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProjectListResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectModel"
          }
        },
        "page": {
          "type": "string",
          "format": "int64"
        },
        "page_size": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ProjectModel": {
      "type": "object",
      "properties": {
        "atomic": {
          "type": "boolean"
        },
        "config": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "docker_image": {
          "type": "string"
        },
        "extra_values": {
          "type": "string"
        },
        "git_branch": {
          "type": "string"
        },
        "git_commit": {
          "type": "string"
        },
        "git_project_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "$ref": "#/definitions/NamespaceModel"
        },
        "namespace_id": {
          "type": "string",
          "format": "int64"
        },
        "override_values": {
          "type": "string"
        },
        "pod_selectors": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "ProjectPod": {
      "type": "object",
      "properties": {
        "container_name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "pod_name": {
          "type": "string"
        }
      }
    },
    "ProjectShowResponse": {
      "type": "object",
      "properties": {
        "atomic": {
          "type": "boolean"
        },
        "config": {
          "type": "string"
        },
        "config_type": {
          "type": "string"
        },
        "cpu": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "docker_image": {
          "type": "string"
        },
        "elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Element"
          }
        },
        "extra_values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectExtraItem"
          }
        },
        "git_branch": {
          "type": "string"
        },
        "git_commit": {
          "type": "string"
        },
        "git_commit_author": {
          "type": "string"
        },
        "git_commit_date": {
          "type": "string"
        },
        "git_commit_title": {
          "type": "string"
        },
        "git_commit_web_url": {
          "type": "string"
        },
        "git_project_id": {
          "type": "string",
          "format": "int64"
        },
        "humanize_created_at": {
          "type": "string"
        },
        "humanize_updated_at": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "memory": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "$ref": "#/definitions/ProjectShowResponseNamespace"
        },
        "override_values": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "urls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceEndpoint"
          }
        }
      }
    },
    "ProjectShowResponseNamespace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ResultType": {
      "type": "string",
      "default": "ResultUnknown",
      "enum": [
        "ResultUnknown",
        "Error",
        "Success",
        "Deployed",
        "DeployedFailed",
        "DeployedCanceled"
      ]
    },
    "ServiceEndpoint": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "port_name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "To": {
      "type": "string",
      "default": "ToSelf",
      "enum": [
        "ToSelf",
        "ToAll",
        "ToOthers"
      ]
    },
    "Type": {
      "type": "string",
      "default": "TypeUnknown",
      "enum": [
        "TypeUnknown",
        "SetUid",
        "ReloadProjects",
        "CancelProject",
        "CreateProject",
        "UpdateProject",
        "ProcessPercent",
        "ClusterInfoSync",
        "InternalError",
        "ApplyProject",
        "HandleExecShell",
        "HandleExecShellMsg",
        "HandleCloseShell",
        "HandleAuthorize"
      ]
    },
    "VersionResponse": {
      "type": "object",
      "properties": {
        "build_date": {
          "type": "string"
        },
        "compiler": {
          "type": "string"
        },
        "git_branch": {
          "type": "string"
        },
        "git_commit": {
          "type": "string"
        },
        "git_repo": {
          "type": "string"
        },
        "git_tag": {
          "type": "string"
        },
        "go_version": {
          "type": "string"
        },
        "helm_version": {
          "type": "string"
        },
        "kubectl_version": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ],
  "tags": [
    {
      "name": "Auth"
    },
    {
      "name": "Changelog"
    },
    {
      "name": "Cluster"
    },
    {
      "name": "ContainerSvc"
    },
    {
      "name": "Endpoint"
    },
    {
      "name": "Event"
    },
    {
      "name": "FileSvc"
    },
    {
      "name": "GitProject"
    },
    {
      "name": "GitProjectConfig"
    },
    {
      "name": "Metrics"
    },
    {
      "name": "Namespace"
    },
    {
      "name": "Picture"
    },
    {
      "name": "Project"
    },
    {
      "name": "Version"
    }
  ]
}
