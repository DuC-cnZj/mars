{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "swagger docs",
    "version": "version not set"
  },
  "paths": {
    "/api/cluster_info": {
      "get": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Cluster_Info",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ClusterInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/project_list": {
      "get": {
        "tags": [
          "Gitlab"
        ],
        "operationId": "Gitlab_ProjectList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProjectListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects": {
      "get": {
        "tags": [
          "Gitlab"
        ],
        "operationId": "Gitlab_Projects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/disable": {
      "post": {
        "tags": [
          "Gitlab"
        ],
        "operationId": "Gitlab_DisableProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/enable": {
      "post": {
        "tags": [
          "Gitlab"
        ],
        "operationId": "Gitlab_EnableProject",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnableProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/{project_id}/branches": {
      "get": {
        "tags": [
          "Gitlab"
        ],
        "operationId": "Gitlab_Branches",
        "parameters": [
          {
            "type": "string",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BranchesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/{project_id}/branches/{branch}/commits": {
      "get": {
        "tags": [
          "Gitlab"
        ],
        "operationId": "Gitlab_Commits",
        "parameters": [
          {
            "type": "string",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CommitsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/{project_id}/branches/{branch}/commits/{commit}": {
      "get": {
        "tags": [
          "Gitlab"
        ],
        "operationId": "Gitlab_Commit",
        "parameters": [
          {
            "type": "string",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "commit",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CommitResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/{project_id}/branches/{branch}/commits/{commit}/pipeline_info": {
      "get": {
        "tags": [
          "Gitlab"
        ],
        "operationId": "Gitlab_PipelineInfo",
        "parameters": [
          {
            "type": "string",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "commit",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PipelineInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/{project_id}/branches/{branch}/config_file": {
      "get": {
        "tags": [
          "Gitlab"
        ],
        "operationId": "Gitlab_ConfigFile",
        "parameters": [
          {
            "type": "string",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ConfigFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/{project_id}/global_config": {
      "get": {
        "tags": [
          "Mars"
        ],
        "operationId": "Mars_GlobalConfig",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GlobalConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/{project_id}/mars_config": {
      "get": {
        "tags": [
          "Mars"
        ],
        "operationId": "Mars_Show",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "branch",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MarsShowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Mars"
        ],
        "operationId": "Mars_Update",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "config": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/MarsUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/gitlab/projects/{project_id}/toggle_enabled": {
      "post": {
        "tags": [
          "Mars"
        ],
        "operationId": "Mars_ToggleEnabled",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "operationId": "Namespace_Index",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/NamespaceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Namespace"
        ],
        "operationId": "Namespace_Store",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NsStoreRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/NsStoreResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces/{namespace_id}": {
      "delete": {
        "tags": [
          "Namespace"
        ],
        "operationId": "Namespace_Destroy",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces/{namespace_id}/cpu_and_memory": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "operationId": "Namespace_CpuAndMemory",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/CpuAndMemoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces/{namespace_id}/projects/{project_id}": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_Show",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ProjectShowResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_Destroy",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces/{namespace_id}/projects/{project_id}/containers": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_AllPodContainers",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AllPodContainersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces/{namespace_id}/projects/{project_id}/pods/{pod}/containers/{container}/logs": {
      "get": {
        "tags": [
          "Project"
        ],
        "operationId": "Project_PodContainerLog",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "name": "project_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "pod",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "container",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PodContainerLogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    },
    "/api/namespaces/{namespace_id}/service_endpoints": {
      "get": {
        "tags": [
          "Namespace"
        ],
        "operationId": "Namespace_ServiceEndpoints",
        "parameters": [
          {
            "type": "string",
            "format": "int64",
            "name": "namespace_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "project_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ServiceEndpointsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AllPodContainersResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodLog"
          }
        }
      }
    },
    "BranchesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        }
      }
    },
    "ClusterInfoResponse": {
      "type": "object",
      "properties": {
        "free_cpu": {
          "type": "string"
        },
        "free_memory": {
          "type": "string"
        },
        "free_request_cpu": {
          "type": "string"
        },
        "free_request_memory": {
          "type": "string"
        },
        "request_cpu_rate": {
          "type": "string"
        },
        "request_memory_rate": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "total_cpu": {
          "type": "string"
        },
        "total_memory": {
          "type": "string"
        },
        "usage_cpu_rate": {
          "type": "string"
        },
        "usage_memory_rate": {
          "type": "string"
        }
      }
    },
    "CommitResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Option"
        }
      }
    },
    "CommitsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        }
      }
    },
    "ConfigFileResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "CpuAndMemoryResponse": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string"
        },
        "memory": {
          "type": "string"
        }
      }
    },
    "DisableProjectRequest": {
      "type": "object",
      "properties": {
        "gitlab_project_id": {
          "type": "string"
        }
      }
    },
    "EnableProjectRequest": {
      "type": "object",
      "properties": {
        "gitlab_project_id": {
          "type": "string"
        }
      }
    },
    "GitlabProjectInfo": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "global_enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "web_url": {
          "type": "string"
        }
      }
    },
    "GitlabProjectModal": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "default_branch": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "enabled": {
          "type": "boolean"
        },
        "gitlab_project_id": {
          "type": "string",
          "format": "int64"
        },
        "global_config": {
          "type": "string"
        },
        "global_enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GlobalConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "MarsShowResponse": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "config": {
          "type": "string"
        }
      }
    },
    "MarsUpdateResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/GitlabProjectModal"
        }
      }
    },
    "NamespaceItem": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceItemSimpleProjectItem"
          }
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NamespaceItemSimpleProjectItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "NamespaceList": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamespaceItem"
          }
        }
      }
    },
    "NamespaceResponse": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "image_pull_secrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NsStoreRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        }
      }
    },
    "NsStoreResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/NamespaceResponse"
        }
      }
    },
    "Option": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "isLeaf": {
          "type": "boolean",
          "title": "isLeaf 兼容 antd"
        },
        "label": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PipelineInfoResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "web_url": {
          "type": "string"
        }
      }
    },
    "PodContainerLogResponse": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/PodLog"
        }
      }
    },
    "PodLog": {
      "type": "object",
      "properties": {
        "container_name": {
          "type": "string"
        },
        "log": {
          "type": "string"
        },
        "pod_name": {
          "type": "string"
        }
      }
    },
    "ProjectListResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitlabProjectInfo"
          }
        }
      }
    },
    "ProjectShowResponse": {
      "type": "object",
      "properties": {
        "atomic": {
          "type": "boolean"
        },
        "config": {
          "type": "string"
        },
        "cpu": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "docker_image": {
          "type": "string"
        },
        "gitlab_branch": {
          "type": "string"
        },
        "gitlab_commit": {
          "type": "string"
        },
        "gitlab_commit_author": {
          "type": "string"
        },
        "gitlab_commit_date": {
          "type": "string"
        },
        "gitlab_commit_title": {
          "type": "string"
        },
        "gitlab_commit_web_url": {
          "type": "string"
        },
        "gitlab_project_id": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "format": "int64"
        },
        "memory": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "$ref": "#/definitions/ProjectShowResponseNamespace"
        },
        "override_values": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProjectShowResponseNamespace": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ProjectsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        }
      }
    },
    "ServiceEndpointsResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ServiceEndpointsResponseitem"
          }
        }
      }
    },
    "ServiceEndpointsResponseitem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Cluster"
    },
    {
      "name": "Gitlab"
    },
    {
      "name": "Mars"
    },
    {
      "name": "Namespace"
    },
    {
      "name": "Project"
    }
  ]
}
