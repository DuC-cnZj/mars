name: CI
on: [push]
jobs:
  build-frontend:
    name: build-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          cache-dependency-path: frontend/yarn.lock
      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: --cwd frontend install
      - uses: borales/actions-yarn@v2.3.0
        with:
          cmd: --cwd frontend build
      - name: upload build files
        uses: actions/upload-artifact@v2
        with:
          name: frontend_dist_files
          path: |
            frontend/build

  build-go:
    needs: [build-frontend]
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest, macos-latest, ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Download frontend files
      uses: actions/download-artifact@v2
      with:
        name: frontend_dist_files
        path: frontend/build
    - name: ls
      run: ls && ls frontend/build
    - name: Test
      run: go test ./...
    # - name: Build
    #   run: |
    #     VERSION_PATH=$(shell go list -m -f "{{.Path}}")/version
    #     LDFLAGS = "-w -s  \
    #     -X ${VERSION_PATH}.gitRepo=$(shell go list -m -f "{{.Path}}") \
    #     -X ${VERSION_PATH}.gitBranch=$(shell git rev-parse --abbrev-ref HEAD) \
    #     -X ${VERSION_PATH}.buildDate=$(shell date -u +'%Y-%m-%dT%H:%M:%SZ') \
    #     -X ${VERSION_PATH}.gitCommit=$(shell git rev-parse --short HEAD) \
    #     -X ${VERSION_PATH}.gitTag=$(shell git describe --exact-match --tags HEAD 2> /dev/null || echo "") \
    #     -X ${VERSION_PATH}.kubectlVersion=$(shell go list -m -f "{{.Path}} {{.Version}}" all | grep k8s.io/client-go | cut -d " " -f2) \
    #     -X ${VERSION_PATH}.helmVersion=$(shell go list -m -f "{{.Path}} {{.Version}}" all | grep helm.sh/helm/v3 | cut -d " " -f2)"
    #     CGO_ENABLED=1 GOOS=linux GOARCH=$RUNNER_ARCH go build -ldflags=${LDFLAGS} -o app main.go