// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: project/project.proto

package project

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProjectDestroyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int64 `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	ProjectId   int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ProjectDestroyRequest) Reset() {
	*x = ProjectDestroyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDestroyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDestroyRequest) ProtoMessage() {}

func (x *ProjectDestroyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDestroyRequest.ProtoReflect.Descriptor instead.
func (*ProjectDestroyRequest) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectDestroyRequest) GetNamespaceId() int64 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *ProjectDestroyRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type ProjectShowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int64 `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	ProjectId   int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ProjectShowRequest) Reset() {
	*x = ProjectShowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectShowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectShowRequest) ProtoMessage() {}

func (x *ProjectShowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectShowRequest.ProtoReflect.Descriptor instead.
func (*ProjectShowRequest) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectShowRequest) GetNamespaceId() int64 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *ProjectShowRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type ProjectShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GitlabProjectId    int64                          `protobuf:"varint,3,opt,name=gitlab_project_id,json=gitlabProjectId,proto3" json:"gitlab_project_id,omitempty"`
	GitlabBranch       string                         `protobuf:"bytes,4,opt,name=gitlab_branch,json=gitlabBranch,proto3" json:"gitlab_branch,omitempty"`
	GitlabCommit       string                         `protobuf:"bytes,5,opt,name=gitlab_commit,json=gitlabCommit,proto3" json:"gitlab_commit,omitempty"`
	Config             string                         `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`
	DockerImage        string                         `protobuf:"bytes,7,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
	Atomic             bool                           `protobuf:"varint,8,opt,name=atomic,proto3" json:"atomic,omitempty"`
	GitlabCommitWebUrl string                         `protobuf:"bytes,9,opt,name=gitlab_commit_web_url,json=gitlabCommitWebUrl,proto3" json:"gitlab_commit_web_url,omitempty"`
	GitlabCommitTitle  string                         `protobuf:"bytes,10,opt,name=gitlab_commit_title,json=gitlabCommitTitle,proto3" json:"gitlab_commit_title,omitempty"`
	GitlabCommitAuthor string                         `protobuf:"bytes,11,opt,name=gitlab_commit_author,json=gitlabCommitAuthor,proto3" json:"gitlab_commit_author,omitempty"`
	GitlabCommitDate   string                         `protobuf:"bytes,12,opt,name=gitlab_commit_date,json=gitlabCommitDate,proto3" json:"gitlab_commit_date,omitempty"`
	Urls               []string                       `protobuf:"bytes,13,rep,name=urls,proto3" json:"urls,omitempty"`
	Namespace          *ProjectShowResponse_Namespace `protobuf:"bytes,14,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Cpu                string                         `protobuf:"bytes,15,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory             string                         `protobuf:"bytes,16,opt,name=memory,proto3" json:"memory,omitempty"`
	OverrideValues     string                         `protobuf:"bytes,17,opt,name=override_values,json=overrideValues,proto3" json:"override_values,omitempty"`
	CreatedAt          string                         `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          string                         `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ProjectShowResponse) Reset() {
	*x = ProjectShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectShowResponse) ProtoMessage() {}

func (x *ProjectShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectShowResponse.ProtoReflect.Descriptor instead.
func (*ProjectShowResponse) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectShowResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectShowResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectShowResponse) GetGitlabProjectId() int64 {
	if x != nil {
		return x.GitlabProjectId
	}
	return 0
}

func (x *ProjectShowResponse) GetGitlabBranch() string {
	if x != nil {
		return x.GitlabBranch
	}
	return ""
}

func (x *ProjectShowResponse) GetGitlabCommit() string {
	if x != nil {
		return x.GitlabCommit
	}
	return ""
}

func (x *ProjectShowResponse) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ProjectShowResponse) GetDockerImage() string {
	if x != nil {
		return x.DockerImage
	}
	return ""
}

func (x *ProjectShowResponse) GetAtomic() bool {
	if x != nil {
		return x.Atomic
	}
	return false
}

func (x *ProjectShowResponse) GetGitlabCommitWebUrl() string {
	if x != nil {
		return x.GitlabCommitWebUrl
	}
	return ""
}

func (x *ProjectShowResponse) GetGitlabCommitTitle() string {
	if x != nil {
		return x.GitlabCommitTitle
	}
	return ""
}

func (x *ProjectShowResponse) GetGitlabCommitAuthor() string {
	if x != nil {
		return x.GitlabCommitAuthor
	}
	return ""
}

func (x *ProjectShowResponse) GetGitlabCommitDate() string {
	if x != nil {
		return x.GitlabCommitDate
	}
	return ""
}

func (x *ProjectShowResponse) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *ProjectShowResponse) GetNamespace() *ProjectShowResponse_Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *ProjectShowResponse) GetCpu() string {
	if x != nil {
		return x.Cpu
	}
	return ""
}

func (x *ProjectShowResponse) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *ProjectShowResponse) GetOverrideValues() string {
	if x != nil {
		return x.OverrideValues
	}
	return ""
}

func (x *ProjectShowResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProjectShowResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type AllPodContainersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int64 `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	ProjectId   int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *AllPodContainersRequest) Reset() {
	*x = AllPodContainersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllPodContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllPodContainersRequest) ProtoMessage() {}

func (x *AllPodContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllPodContainersRequest.ProtoReflect.Descriptor instead.
func (*AllPodContainersRequest) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{3}
}

func (x *AllPodContainersRequest) GetNamespaceId() int64 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *AllPodContainersRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

type PodLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodName       string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	ContainerName string `protobuf:"bytes,2,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	Log           string `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *PodLog) Reset() {
	*x = PodLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodLog) ProtoMessage() {}

func (x *PodLog) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodLog.ProtoReflect.Descriptor instead.
func (*PodLog) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{4}
}

func (x *PodLog) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *PodLog) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *PodLog) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

type AllPodContainersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PodLog `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AllPodContainersResponse) Reset() {
	*x = AllPodContainersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllPodContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllPodContainersResponse) ProtoMessage() {}

func (x *AllPodContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllPodContainersResponse.ProtoReflect.Descriptor instead.
func (*AllPodContainersResponse) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{5}
}

func (x *AllPodContainersResponse) GetData() []*PodLog {
	if x != nil {
		return x.Data
	}
	return nil
}

type PodContainerLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int64  `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	ProjectId   int64  `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Pod         string `protobuf:"bytes,3,opt,name=pod,proto3" json:"pod,omitempty"`
	Container   string `protobuf:"bytes,4,opt,name=container,proto3" json:"container,omitempty"`
}

func (x *PodContainerLogRequest) Reset() {
	*x = PodContainerLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodContainerLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodContainerLogRequest) ProtoMessage() {}

func (x *PodContainerLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodContainerLogRequest.ProtoReflect.Descriptor instead.
func (*PodContainerLogRequest) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{6}
}

func (x *PodContainerLogRequest) GetNamespaceId() int64 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *PodContainerLogRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *PodContainerLogRequest) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

func (x *PodContainerLogRequest) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

type PodContainerLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PodLog `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PodContainerLogResponse) Reset() {
	*x = PodContainerLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PodContainerLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PodContainerLogResponse) ProtoMessage() {}

func (x *PodContainerLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PodContainerLogResponse.ProtoReflect.Descriptor instead.
func (*PodContainerLogResponse) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{7}
}

func (x *PodContainerLogResponse) GetData() *PodLog {
	if x != nil {
		return x.Data
	}
	return nil
}

type IsPodRunningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Pod       string `protobuf:"bytes,2,opt,name=pod,proto3" json:"pod,omitempty"`
}

func (x *IsPodRunningRequest) Reset() {
	*x = IsPodRunningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPodRunningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPodRunningRequest) ProtoMessage() {}

func (x *IsPodRunningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPodRunningRequest.ProtoReflect.Descriptor instead.
func (*IsPodRunningRequest) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{8}
}

func (x *IsPodRunningRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *IsPodRunningRequest) GetPod() string {
	if x != nil {
		return x.Pod
	}
	return ""
}

type IsPodRunningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Running bool   `protobuf:"varint,1,opt,name=running,proto3" json:"running,omitempty"`
	Reason  string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *IsPodRunningResponse) Reset() {
	*x = IsPodRunningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsPodRunningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsPodRunningResponse) ProtoMessage() {}

func (x *IsPodRunningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsPodRunningResponse.ProtoReflect.Descriptor instead.
func (*IsPodRunningResponse) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{9}
}

func (x *IsPodRunningResponse) GetRunning() bool {
	if x != nil {
		return x.Running
	}
	return false
}

func (x *IsPodRunningResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ProjectShowResponse_Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProjectShowResponse_Namespace) Reset() {
	*x = ProjectShowResponse_Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_project_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectShowResponse_Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectShowResponse_Namespace) ProtoMessage() {}

func (x *ProjectShowResponse_Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_project_project_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectShowResponse_Namespace.ProtoReflect.Descriptor instead.
func (*ProjectShowResponse_Namespace) Descriptor() ([]byte, []int) {
	return file_project_project_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ProjectShowResponse_Namespace) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectShowResponse_Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_project_project_proto protoreflect.FileDescriptor

var file_project_project_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x56,
	0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xd9, 0x05, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x42, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x74, 0x6f, 0x6d, 0x69, 0x63, 0x12, 0x31, 0x0a, 0x15, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x77, 0x65, 0x62,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x57, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x2e,
	0x0a, 0x13, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x69, 0x74,
	0x6c, 0x61, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x2c, 0x0a, 0x12, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x69,
	0x74, 0x6c, 0x61, 0x62, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72,
	0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63,
	0x70, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x1a, 0x2f, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x17, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x5c, 0x0a, 0x06, 0x50, 0x6f, 0x64, 0x4c, 0x6f, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x37, 0x0a,
	0x18, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x50, 0x6f, 0x64, 0x4c, 0x6f, 0x67,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x50, 0x6f, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x70, 0x6f, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x22, 0x36, 0x0a, 0x17, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x50,
	0x6f, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x45, 0x0a, 0x13, 0x49,
	0x73, 0x50, 0x6f, 0x64, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x6f, 0x64, 0x22, 0x48, 0x0a, 0x14, 0x49, 0x73, 0x50, 0x6f, 0x64, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x32, 0xa5, 0x05, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x77, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x12, 0x16, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x2a, 0x34, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x6f, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x13, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x12, 0x34, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x71, 0x0a, 0x0c, 0x49, 0x73, 0x50, 0x6f, 0x64, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x14, 0x2e, 0x49, 0x73, 0x50, 0x6f, 0x64, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x49, 0x73, 0x50, 0x6f, 0x64,
	0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x12, 0x2c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x7d, 0x2f, 0x70, 0x6f, 0x64, 0x2f, 0x7b, 0x70, 0x6f, 0x64, 0x7d, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x90, 0x01, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x41, 0x6c, 0x6c,
	0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x41, 0x6c, 0x6c, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x47, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x41, 0x12, 0x3f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0xa9, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x64,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x12, 0x17, 0x2e, 0x50,
	0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x50, 0x6f, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x63, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x5d, 0x12, 0x5b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x6f,
	0x64, 0x73, 0x2f, 0x7b, 0x70, 0x6f, 0x64, 0x7d, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x7d, 0x2f,
	0x6c, 0x6f, 0x67, 0x73, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x75, 0x63, 0x2d, 0x63, 0x6e, 0x7a, 0x6a, 0x2f, 0x6d, 0x61, 0x72, 0x73,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_project_proto_rawDescOnce sync.Once
	file_project_project_proto_rawDescData = file_project_project_proto_rawDesc
)

func file_project_project_proto_rawDescGZIP() []byte {
	file_project_project_proto_rawDescOnce.Do(func() {
		file_project_project_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_project_proto_rawDescData)
	})
	return file_project_project_proto_rawDescData
}

var file_project_project_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_project_project_proto_goTypes = []interface{}{
	(*ProjectDestroyRequest)(nil),         // 0: ProjectDestroyRequest
	(*ProjectShowRequest)(nil),            // 1: ProjectShowRequest
	(*ProjectShowResponse)(nil),           // 2: ProjectShowResponse
	(*AllPodContainersRequest)(nil),       // 3: AllPodContainersRequest
	(*PodLog)(nil),                        // 4: PodLog
	(*AllPodContainersResponse)(nil),      // 5: AllPodContainersResponse
	(*PodContainerLogRequest)(nil),        // 6: PodContainerLogRequest
	(*PodContainerLogResponse)(nil),       // 7: PodContainerLogResponse
	(*IsPodRunningRequest)(nil),           // 8: IsPodRunningRequest
	(*IsPodRunningResponse)(nil),          // 9: IsPodRunningResponse
	(*ProjectShowResponse_Namespace)(nil), // 10: ProjectShowResponse.Namespace
	(*emptypb.Empty)(nil),                 // 11: google.protobuf.Empty
}
var file_project_project_proto_depIdxs = []int32{
	10, // 0: ProjectShowResponse.namespace:type_name -> ProjectShowResponse.Namespace
	4,  // 1: AllPodContainersResponse.data:type_name -> PodLog
	4,  // 2: PodContainerLogResponse.data:type_name -> PodLog
	0,  // 3: Project.Destroy:input_type -> ProjectDestroyRequest
	1,  // 4: Project.Show:input_type -> ProjectShowRequest
	8,  // 5: Project.IsPodRunning:input_type -> IsPodRunningRequest
	3,  // 6: Project.AllPodContainers:input_type -> AllPodContainersRequest
	6,  // 7: Project.PodContainerLog:input_type -> PodContainerLogRequest
	11, // 8: Project.Destroy:output_type -> google.protobuf.Empty
	2,  // 9: Project.Show:output_type -> ProjectShowResponse
	9,  // 10: Project.IsPodRunning:output_type -> IsPodRunningResponse
	5,  // 11: Project.AllPodContainers:output_type -> AllPodContainersResponse
	7,  // 12: Project.PodContainerLog:output_type -> PodContainerLogResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_project_project_proto_init() }
func file_project_project_proto_init() {
	if File_project_project_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_project_project_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDestroyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectShowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllPodContainersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllPodContainersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodContainerLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PodContainerLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsPodRunningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsPodRunningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_project_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectShowResponse_Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_project_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_project_project_proto_goTypes,
		DependencyIndexes: file_project_project_proto_depIdxs,
		MessageInfos:      file_project_project_proto_msgTypes,
	}.Build()
	File_project_project_proto = out.File
	file_project_project_proto_rawDesc = nil
	file_project_project_proto_goTypes = nil
	file_project_project_proto_depIdxs = nil
}
